from ..models.tool_models import ToolCategory, ReconTool
from ..services.database import get_database

# Comprehensive recon tools data - 58+ tools across 10 categories
RECON_TOOLS_DATA = [
    # 🟦 1. Subdomain Enumeration
    {"name": "subfinder", "category": ToolCategory.SUBDOMAIN_ENUMERATION, "description": "Passive subdomain discovery", "install_command": "go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest", "usage_description": "Fast passive subdomain enumeration tool", "icon_color": "#3b82f6", "category_color": "#3b82f6"},
    {"name": "amass", "category": ToolCategory.SUBDOMAIN_ENUMERATION, "description": "Active/passive subdomain enum", "install_command": "go install -v github.com/owasp-amass/amass/v4/...@master", "usage_description": "In-depth attack surface mapping and asset discovery", "icon_color": "#3b82f6", "category_color": "#3b82f6"},
    {"name": "crt.sh parser", "category": ToolCategory.SUBDOMAIN_ENUMERATION, "description": "Certificate Transparency search", "install_command": "pip install crtsh", "usage_description": "Certificate transparency log search", "icon_color": "#3b82f6", "category_color": "#3b82f6"},
    {"name": "puredns", "category": ToolCategory.SUBDOMAIN_ENUMERATION, "description": "DNS resolution + wildcard detection", "install_command": "go install github.com/d3mondev/puredns/v2@latest", "usage_description": "Fast domain resolver and subdomain bruteforcing tool", "icon_color": "#3b82f6", "category_color": "#3b82f6"},
    {"name": "dnsx", "category": ToolCategory.SUBDOMAIN_ENUMERATION, "description": "Fast DNS resolution", "install_command": "go install -v github.com/projectdiscovery/dnsx/cmd/dnsx@latest", "usage_description": "Fast and multi-purpose DNS toolkit", "icon_color": "#3b82f6", "category_color": "#3b82f6"},
    {"name": "gotator", "category": ToolCategory.SUBDOMAIN_ENUMERATION, "description": "Subdomain permutation", "install_command": "go install github.com/Josue87/gotator@latest", "usage_description": "Generate DNS wordlists through permutations", "icon_color": "#3b82f6", "category_color": "#3b82f6"},
    {"name": "dnsgen", "category": ToolCategory.SUBDOMAIN_ENUMERATION, "description": "Wordlist-based permutations", "install_command": "pip install dnsgen", "usage_description": "Generate combinations of domain names based on wordlists", "icon_color": "#3b82f6", "category_color": "#3b82f6"},
    {"name": "github-subdomains", "category": ToolCategory.SUBDOMAIN_ENUMERATION, "description": "GitHub scraping for subdomains", "install_command": "go install github.com/gwen001/github-subdomains@latest", "usage_description": "Find subdomains from GitHub", "icon_color": "#3b82f6", "category_color": "#3b82f6"},
    {"name": "mapcidr", "category": ToolCategory.SUBDOMAIN_ENUMERATION, "description": "ASN to CIDR mapping", "install_command": "go install -v github.com/projectdiscovery/mapcidr/cmd/mapcidr@latest", "usage_description": "Utility for performing multiple operations for a given subnet/CIDR ranges", "icon_color": "#3b82f6", "category_color": "#3b82f6"},
    {"name": "asnlookup", "category": ToolCategory.SUBDOMAIN_ENUMERATION, "description": "ASN to IP/Subdomain correlation", "install_command": "pip install asnlookup", "usage_description": "Lookup ASN and organization information", "icon_color": "#3b82f6", "category_color": "#3b82f6"},

    # 🟩 2. Liveness, Fingerprinting & Screenshots
    {"name": "httpx", "category": ToolCategory.LIVENESS_FINGERPRINTING, "description": "Liveness check with response info", "install_command": "go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest", "usage_description": "Fast and multi-purpose HTTP toolkit", "icon_color": "#10b981", "category_color": "#10b981"},
    {"name": "cdncheck", "category": ToolCategory.LIVENESS_FINGERPRINTING, "description": "CDN and WAF fingerprinting", "install_command": "Built into httpx", "usage_description": "CDN and WAF detection utility", "icon_color": "#10b981", "category_color": "#10b981"},
    {"name": "tlsx", "category": ToolCategory.LIVENESS_FINGERPRINTING, "description": "TLS certificate info gathering", "install_command": "go install github.com/projectdiscovery/tlsx/cmd/tlsx@latest", "usage_description": "Fast and configurable TLS grabber", "icon_color": "#10b981", "category_color": "#10b981"},
    {"name": "gowitness", "category": ToolCategory.LIVENESS_FINGERPRINTING, "description": "Web screenshots of live hosts", "install_command": "go install github.com/sensepost/gowitness@latest", "usage_description": "Web screenshot utility using Chrome Headless", "icon_color": "#10b981", "category_color": "#10b981"},
    {"name": "wafw00f", "category": ToolCategory.LIVENESS_FINGERPRINTING, "description": "Detect WAF in front of site", "install_command": "pip install wafw00f", "usage_description": "Identify and fingerprint Web Application Firewall products", "icon_color": "#10b981", "category_color": "#10b981"},
    {"name": "whatweb", "category": ToolCategory.LIVENESS_FINGERPRINTING, "description": "Web tech stack detection", "install_command": "apt install whatweb", "usage_description": "Web scanner that recognizes web technologies", "icon_color": "#10b981", "category_color": "#10b981"},
    {"name": "wappalyzer", "category": ToolCategory.LIVENESS_FINGERPRINTING, "description": "Alternative to WhatWeb (Node.js)", "install_command": "npm install -g wappalyzer-cli", "usage_description": "Identify technologies used on websites", "icon_color": "#10b981", "category_color": "#10b981"},
    {"name": "CMSeeK", "category": ToolCategory.LIVENESS_FINGERPRINTING, "description": "CMS fingerprinting and CVE mapping", "install_command": "git clone https://github.com/Tuhinshubhra/CMSeeK", "usage_description": "CMS detection and exploitation suite", "icon_color": "#10b981", "category_color": "#10b981"},

    # 🟨 3. JavaScript/Endpoint Discovery
    {"name": "subjs", "category": ToolCategory.JAVASCRIPT_ENDPOINT, "description": "Extract JS URLs from HTML", "install_command": "go install -v github.com/lc/subjs@latest", "usage_description": "Fetches javascript files from a list of URLS or subdomains", "icon_color": "#f59e0b", "category_color": "#f59e0b"},
    {"name": "xnLinkFinder", "category": ToolCategory.JAVASCRIPT_ENDPOINT, "description": "Extract endpoints from JS", "install_command": "pip install xnLinkFinder", "usage_description": "Discovery of endpoints in JavaScript files", "icon_color": "#f59e0b", "category_color": "#f59e0b"},
    {"name": "linkfinder", "category": ToolCategory.JAVASCRIPT_ENDPOINT, "description": "Regex-based endpoint extractor from JS", "install_command": "pip install linkfinder", "usage_description": "Discover endpoints and their parameters in JavaScript files", "icon_color": "#f59e0b", "category_color": "#f59e0b"},
    {"name": "getjswords", "category": ToolCategory.JAVASCRIPT_ENDPOINT, "description": "Parameter & keyword discovery in JS", "install_command": "git clone https://github.com/m4ll0k/GetJSWords", "usage_description": "Extract words from JavaScript files", "icon_color": "#f59e0b", "category_color": "#f59e0b"},
    {"name": "JSParser", "category": ToolCategory.JAVASCRIPT_ENDPOINT, "description": "Static JS analysis (regex)", "install_command": "pip install jsparser", "usage_description": "Parse JavaScript files for URLs and endpoints", "icon_color": "#f59e0b", "category_color": "#f59e0b"},
    {"name": "jsbeautifier", "category": ToolCategory.JAVASCRIPT_ENDPOINT, "description": "Beautify/minify JS for parsing", "install_command": "pip install jsbeautifier", "usage_description": "Beautify, unpack or deobfuscate JavaScript", "icon_color": "#f59e0b", "category_color": "#f59e0b"},

    # 🟥 4. Vulnerability Scanning
    {"name": "dalfox", "category": ToolCategory.VULNERABILITY_SCANNING, "description": "XSS scanner (param/context-aware)", "install_command": "go install github.com/hahwul/dalfox/v2@latest", "usage_description": "Powerful open-source XSS scanner and utility", "icon_color": "#ef4444", "category_color": "#ef4444"},
    {"name": "XSStrike", "category": ToolCategory.VULNERABILITY_SCANNING, "description": "XSS detection via headless browser", "install_command": "git clone https://github.com/s0md3v/XSStrike && pip install -r requirements.txt", "usage_description": "Advanced XSS detection suite", "icon_color": "#ef4444", "category_color": "#ef4444"},
    {"name": "sqlmap", "category": ToolCategory.VULNERABILITY_SCANNING, "description": "SQLi scanner (auto-detection)", "install_command": "apt install sqlmap", "usage_description": "Automatic SQL injection and database takeover tool", "icon_color": "#ef4444", "category_color": "#ef4444"},
    {"name": "crlfuzz", "category": ToolCategory.VULNERABILITY_SCANNING, "description": "CRLF Injection tester", "install_command": "go install github.com/dwisiswant0/crlfuzz/cmd/crlfuzz@latest", "usage_description": "Fast tool to scan CRLF vulnerability", "icon_color": "#ef4444", "category_color": "#ef4444"},
    {"name": "qsreplace", "category": ToolCategory.VULNERABILITY_SCANNING, "description": "Replace values in URLs (open redirect)", "install_command": "go install github.com/tomnomnom/qsreplace@latest", "usage_description": "Accept URLs on stdin, replace all query string values with a user-supplied value", "icon_color": "#ef4444", "category_color": "#ef4444"},
    {"name": "nuclei", "category": ToolCategory.VULNERABILITY_SCANNING, "description": "Vulnerability templated scanner", "install_command": "go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest", "usage_description": "Fast and customizable vulnerability scanner", "icon_color": "#ef4444", "category_color": "#ef4444"},
    {"name": "nuclei-templates", "category": ToolCategory.VULNERABILITY_SCANNING, "description": "Template repo for nuclei", "install_command": "git clone https://github.com/projectdiscovery/nuclei-templates", "usage_description": "Community-curated list of templates for nuclei", "icon_color": "#ef4444", "category_color": "#ef4444"},

    # 🟪 5. Historical Data & Archive Recon
    {"name": "gau", "category": ToolCategory.HISTORICAL_DATA, "description": "Get all URLs (Wayback, etc.)", "install_command": "go install github.com/lc/gau/v2/cmd/gau@latest", "usage_description": "Fetch known URLs from AlienVault's Open Threat Exchange, the Wayback Machine, and Common Crawl", "icon_color": "#8b5cf6", "category_color": "#8b5cf6"},
    {"name": "waybackurls", "category": ToolCategory.HISTORICAL_DATA, "description": "Archived URLs from Internet Archive", "install_command": "go install github.com/tomnomnom/waybackurls@latest", "usage_description": "Fetch all the URLs that the Wayback Machine knows about for a domain", "icon_color": "#8b5cf6", "category_color": "#8b5cf6"},
    {"name": "urless", "category": ToolCategory.HISTORICAL_DATA, "description": "Fast historical URL fetching", "install_command": "go install github.com/xnl-h4ck3r/urless@latest", "usage_description": "De-duplicate URLs and filter out uninteresting URLs", "icon_color": "#8b5cf6", "category_color": "#8b5cf6"},

    # 🟧 6. Directory & File Fuzzing
    {"name": "ffuf", "category": ToolCategory.DIRECTORY_FUZZING, "description": "Directory brute-forcing & fuzzing", "install_command": "go install github.com/ffuf/ffuf/v2@latest", "usage_description": "Fast web fuzzer written in Go", "icon_color": "#f97316", "category_color": "#f97316"},
    {"name": "feroxbuster", "category": ToolCategory.DIRECTORY_FUZZING, "description": "Recursive fuzzing", "install_command": "apt install feroxbuster", "usage_description": "Fast content discovery tool written in Rust", "icon_color": "#f97316", "category_color": "#f97316"},
    {"name": "dirsearch", "category": ToolCategory.DIRECTORY_FUZZING, "description": "Python-based dir scanning", "install_command": "git clone https://github.com/maurosoria/dirsearch", "usage_description": "Web path scanner", "icon_color": "#f97316", "category_color": "#f97316"},
    {"name": "byp4xx", "category": ToolCategory.DIRECTORY_FUZZING, "description": "403 bypass techniques", "install_command": "go install github.com/lobuhi/byp4xx@latest", "usage_description": "40X/HTTP bypasser in Go", "icon_color": "#f97316", "category_color": "#f97316"},

    # 🟫 7. Port Scanning & Network Enumeration
    {"name": "nmap", "category": ToolCategory.PORT_SCANNING, "description": "Port scanning & service detection", "install_command": "apt install nmap", "usage_description": "Network discovery and security auditing", "icon_color": "#a16207", "category_color": "#a16207"},
    {"name": "smap", "category": ToolCategory.PORT_SCANNING, "description": "Fast nmap-compatible port scanner", "install_command": "go install github.com/projectdiscovery/smap/cmd/smap@latest", "usage_description": "Drop-in replacement for Nmap powered by Shodan.io", "icon_color": "#a16207", "category_color": "#a16207"},
    {"name": "naabu", "category": ToolCategory.PORT_SCANNING, "description": "Lightweight port scanner", "install_command": "go install -v github.com/projectdiscovery/naabu/v2/cmd/naabu@latest", "usage_description": "Fast port scanner written in go with focus on reliability and simplicity", "icon_color": "#a16207", "category_color": "#a16207"},
    {"name": "masscan", "category": ToolCategory.PORT_SCANNING, "description": "Ultra-fast port scanning", "install_command": "apt install masscan", "usage_description": "TCP port scanner, spews SYN packets asynchronously", "icon_color": "#a16207", "category_color": "#a16207"},
    {"name": "brutespray", "category": ToolCategory.PORT_SCANNING, "description": "Brute-force SSH, RDP, FTP, etc.", "install_command": "git clone https://github.com/x90skysn3k/brutespray", "usage_description": "Brute-forcing tool that can be used during penetration tests", "icon_color": "#a16207", "category_color": "#a16207"},

    # 🟦 8. Cloud & S3 Recon
    {"name": "s3scanner", "category": ToolCategory.CLOUD_RECON, "description": "Public bucket enumeration", "install_command": "go install github.com/sa7mon/s3scanner@latest", "usage_description": "Scan for misconfigured S3 buckets across S3-compatible APIs", "icon_color": "#0ea5e9", "category_color": "#0ea5e9"},
    {"name": "cloud_enum", "category": ToolCategory.CLOUD_RECON, "description": "AWS/Azure/GCP asset recon", "install_command": "git clone https://github.com/initstring/cloud_enum", "usage_description": "Multi-cloud OSINT tool designed to enumerate public resources", "icon_color": "#0ea5e9", "category_color": "#0ea5e9"},

    # 🟨 9. Reporting, Output, & Notification
    {"name": "notify", "category": ToolCategory.REPORTING_NOTIFICATION, "description": "Send alerts (Slack, Email, etc.)", "install_command": "go install -v github.com/projectdiscovery/notify/cmd/notify@latest", "usage_description": "Stream the output of several tools and publish it to different platforms", "icon_color": "#eab308", "category_color": "#eab308"},
    {"name": "unfurl", "category": ToolCategory.REPORTING_NOTIFICATION, "description": "URL parsing", "install_command": "go install github.com/tomnomnom/unfurl@latest", "usage_description": "Extract specific parts of URLs", "icon_color": "#eab308", "category_color": "#eab308"},
    {"name": "anew", "category": ToolCategory.REPORTING_NOTIFICATION, "description": "Deduplication utility", "install_command": "go install github.com/tomnomnom/anew@latest", "usage_description": "Tool for adding new lines to files, skipping duplicates", "icon_color": "#eab308", "category_color": "#eab308"},
    {"name": "interactsh-client", "category": ToolCategory.REPORTING_NOTIFICATION, "description": "OOB XSS, SSRF detection", "install_command": "go install -v github.com/projectdiscovery/interactsh/cmd/interactsh-client@latest", "usage_description": "Out-of-band interaction gathering server and client library", "icon_color": "#eab308", "category_color": "#eab308"},

    # ⚙️ 10. Utility / Miscellaneous
    {"name": "fav-up", "category": ToolCategory.UTILITY_MISC, "description": "Favicon hashing (for CDN asset tracking)", "install_command": "git clone https://github.com/pielco11/fav-up", "usage_description": "IP lookup by favicon", "icon_color": "#6b7280", "category_color": "#6b7280"},
    {"name": "analyticsrelationships", "category": ToolCategory.UTILITY_MISC, "description": "Google Analytics asset tracking", "install_command": "git clone https://github.com/Josue87/AnalyticsRelationships", "usage_description": "Get related domains from Google Analytics IDs", "icon_color": "#6b7280", "category_color": "#6b7280"},
    {"name": "dsieve", "category": ToolCategory.UTILITY_MISC, "description": "Filter domains/subs by pattern", "install_command": "go install github.com/trickest/dsieve@latest", "usage_description": "Filter and enrich a list of subdomains by level", "icon_color": "#6b7280", "category_color": "#6b7280"},
    {"name": "cdnstake", "category": ToolCategory.UTILITY_MISC, "description": "Identify vulnerable CNAMEs", "install_command": "go install github.com/EdOverflow/cdnstake@latest", "usage_description": "Subdomain takeover vulnerability scanner", "icon_color": "#6b7280", "category_color": "#6b7280"},
    {"name": "inscope", "category": ToolCategory.UTILITY_MISC, "description": "Scope filtering engine", "install_command": "go install github.com/tomnomnom/inscope@latest", "usage_description": "Filter URLs to only include in-scope targets", "icon_color": "#6b7280", "category_color": "#6b7280"},
    {"name": "enumerepo", "category": ToolCategory.UTILITY_MISC, "description": "Git repo recon", "install_command": "git clone https://github.com/trickest/enumerepo", "usage_description": "List all public repositories for a user/organization", "icon_color": "#6b7280", "category_color": "#6b7280"},
    {"name": "gitleaks", "category": ToolCategory.UTILITY_MISC, "description": "Git secret scanning", "install_command": "go install github.com/gitleaks/gitleaks/v8@latest", "usage_description": "Detect and prevent secrets in git repos", "icon_color": "#6b7280", "category_color": "#6b7280"},
    {"name": "trufflehog", "category": ToolCategory.UTILITY_MISC, "description": "Advanced git leak scanner", "install_command": "pip install trufflehog", "usage_description": "Find credentials accidentally committed to git repos", "icon_color": "#6b7280", "category_color": "#6b7280"},
    {"name": "gitdorks_go", "category": ToolCategory.UTILITY_MISC, "description": "GitHub dork scanner", "install_command": "go install github.com/damit5/gitdorks_go@latest", "usage_description": "Scan github for sensitive information", "icon_color": "#6b7280", "category_color": "#6b7280"},
]


async def initialize_tools():
    """Initialize tools in database if not already present"""
    db = get_database()
    for tool_data in RECON_TOOLS_DATA:
        existing_tool = await db.recon_tools.find_one({"name": tool_data["name"]})
        if not existing_tool:
            tool = ReconTool(**tool_data)
            await db.recon_tools.insert_one(tool.dict())